1. 리액트란? 
 - UI를 만들기 위한 자바스크립트 라이브러리

2. 현재 개발하는 리액트 컴포넌트 생성방식
 - 함수형 컴포넌트 생성방식

3. 개발방식 2가지
 - SPA (Single Page Application), CSR (Client Side Rendering)

4. 프레임워크와 라이브러리 차이 (장단점 포험)
 - 프레임워크  
    1) 무엇인가를 만드는데 필요한 모든 것들이 다 갖춰진 틀이 제공되는 것
    2) 장점 : 정해진 틀을 사용하므로 편리하다. / 협업 가능
    3) 단점 : 정해진 틀을 사용하므로 수정을 할 수 없는 제한점이 있다.
    
 - 라이브러리 
    1) 틀이 정해져 있지 않고, 단 한가지 조금더 작은 문제를 해결하기 위해서 작은 솔루션 단위
    2) 장점 : 필요에 따라 골라서 사용할 수 있는 개발자의 자율성이 보장됨
    3) 단점 : 다양한 라이브러리의 사용으로 관리와 협업의 어려움 발생

5. 리액트 애플리케이션 구조 설계방식
 -  HTML에서의 박스 레이아웃과 같은 형식으로 큰 박스 생성 > 작은 박스 생성.

6. 컵포넌트 생성기준
 - 재사용성 (DRY : Don’t Repeat Yourself!) / 단일책임 (SR : Single Responsibility) 

7. 리액트 동작원리
 - 렌더링 : 서버로부터 HTML 파일을 받아 브라우저에 뿌려주는 과정 / 리액팅

8. 리액트 프로젝트 생성 명령어(yarn)
 1) croepack enable (관리자 권한)
 2) yarn create react-app ${폴더명}